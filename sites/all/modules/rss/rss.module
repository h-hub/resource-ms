<?php
	//database connection
	include 'db_con.php';
	//custom made functions
	include 'myFunction.php';
	 // function rss4ucsc_help
	function rss_help($path, $arg){
		switch($path){
			case 'admin/help#rss':
				$output = '<p>'. t('Part 1') .'</p>';
				$output .= '<p>'. t('part 2') .'</p>';
				return $output;
			case 'admin/user/rss':
				$output = '<p>'. t("Part 3") .'</p>';
				return $output;
		}
	}	
	/**
	* Valid permissions for this module
	* @return array An array of valid permissions for the onthisdate module
	*/
	function rss_perm(){
		return array('create events', 'administer rss', 'calendar access', 'front page', 'user managment', 'view calender', 'approve reservation', 'make reservation');
	}
	/**
	* Menu for this module
	* @return array An array with this module's settings.
	*/
	function rss_menu() {
		$items = array();
		global $user;
		if ( $user->uid ){
			//calendar managment
			$items['cm'] = array(
				'title' => 'Calendar management',
				'page callback' => 'viewCal',
				//'page arguments' => array('calendar_list_form'),
				'access arguments' => array('Academic calender'),
				'access callback' => TRUE,
				'expanded' => TRUE,
				'file' => 'viewCalender.inc',
				// 'menu_name' => 'primary-links',
			);
			$items['cm/viewCalender'] = array(
				'page callback' => 'viewCal',
				'access arguments' => array('view calender'),
				'title' => 'Academic Calendar ',
				'file' => 'viewCalender.inc',
				
			);	
			$items['cm/select_calender'] = array(
				'page callback' => 'drupal_get_form',
				'page arguments' => array('calendar_list_form'),
				'access arguments' => array('calendar access'),
				'file' => 'calendar_list.inc',
				'title' => 'Edit Calendar',
				//'type' => MENU_LOCAL_TASK,
				//'title' => 'Select Calendar ',
			);
			$items['cm/select_calender/callback'] = array(
				'page callback' => 'calendar_list_form_callback',
				'access arguments' => array('calendar access'),
				'file' => 'calendar_list.inc',
				'type' => MENU_CALLBACK,
			);
	
			$items['cm/calendar_event/%'] = array(
				'page callback' => 'calendarMgt',
				'access arguments' => array('calendar access'),
				'page arguments' => array(2),//access arguments
				'description' => 'Manage Your Calendar Events',
				'file' => 'calendar_mgt.inc',
				'type' => MENU_CALLBACK,
			);	
			
		
			$items['cm/myCalender'] = array(
				'page callback' => 'myCal',
				'access arguments' => array('view calender'),
				'title' => 'My Calendar ',
				'file' => 'myCalender.inc',
				
			);
			$items['ControlP'] = array(
				'title' => 'Manage Reservation',
				'page callback' => 'rss_manage_resource',//return page 
				//'page arguments' => array('resource_list_form'),
				'access arguments' => array('approve reservation'),//access permission
				//'access callback' => TRUE,
				'expanded' => TRUE,
				//'menu_name' => 'primary-links',
				'file' => 'resource_manage.inc',
			);
			//approve reject request
			/*$items['ControlP/mangeResource'] = array(
				'page callback' => 'rss_manage_resource',//return page 
				//'access callback' => 'user_access',//check user have the permission
				//'type' => MENU_LOCAL_TASK,
				'title' => 'Manage Reservation',
				'file' => 'resource_manage.inc',
				'description' => 'Update Resource',
				'access arguments' => array('approve reservation'),//access permission
			);*/
			$items['adminP'] = array(
				'title' => 'Manage Resource',
				'page callback' => 'rss_resource',//return page
				'page arguments' => array('resource_list_form'),
				'access arguments' => array('administer rss'),//access permission
				//'access callback' => TRUE,
				'expanded' => TRUE,
				//'menu_name' => 'primary-links',
			);
			$items['adminP/resource_register'] = array(
				'page callback' => 'rss_resource',//return page
				//'access callback' => 'user_access',//check user have the permission
				//'type' => MENU_LOCAL_TASK,
				'title' => 'Create Resource',
				'description' => 'Superuser page for add resource',
				'access arguments' => array('administer rss'),//access permission
				'weight' => 0,
			);			
			$items['adminP/update_resource'] = array(
				'page callback' => 'rss_resource_update',//return page 
				//'access callback' => 'user_access',//check user have the permission
				//'type' => MENU_LOCAL_TASK,
				'title' => 'Update/Delete Resource',
				'file' => 'resource_update.inc',
				'description' => 'Update Resource',
				'access arguments' => array('administer rss'),//access permission
			);
			$items['rss'] = array(
				'title' => 'Make reservations',
				'page callback' => 'drupal_get_form',
				'page arguments' => array('resource_list_form'),
				//'access callback' => TRUE,
				'access arguments' => array('make reservation'),//access permission
				'expanded' => TRUE,
				'file' => 'resource_list.inc',
				// 'menu_name' => 'primary-links',
			);
			//resource selection
			$items['rss/resource_select'] = array(
				'page callback' => 'drupal_get_form',
				'page arguments' => array('resource_list_form'),
				'access arguments' => array('create events'),
				'file' => 'resource_list.inc',
				'type' => MENU_LOCAL_TASK,
				'title' => 'Resource Selection ',
			);
		
			$items['rss/resource_select/callback'] = array(
				'page callback' => 'drupal_get_form',
				'page callback' => 'resource_list_form_callback',
				'access arguments' => array('view calender'),
				'file' => 'resource_list.inc',
				'type' => MENU_CALLBACK,
			);
			$items['rss/calendar/%'] = array(
				'page callback' => 'rss_calender',//return page 
				'page arguments' => array(2),//access arguments
				//'access callback' => 'user_access',//check user have the permission
				//'type' => MENU_LOCAL_TASK,
				//'title' => 'Calendar page ',
				'file' => 'rssCalender.inc',
				'description' => 'Calendar page',
				'access arguments' => array('view calender'),//access permission
			);
			$items['view']= array(
				'page callback' => 'rss_viewResourse',//return page 
				//'access callback' => 'user_access',//check user have the permission
				//'type' => MENU_LOCAL_TASK,
				'title' => 'Resource Details',
				'file' => 'resource_detail.inc',
				'description' => 'Resource Detail',
				'access arguments' => array('view calender'),//access permission
			);
		}
		else{
		
		}
		return $items;
	}
	function rss_resource(){
		$page_content = '';
		$page_content .= drupal_get_form('rss_resource_form');
		return $page_content;
	}
	function rss_resource_form(){
		//new function class element
		$myFun = new myFun();
		$form['resource'] = array(
			'#type' => 'fieldset',
			'#title' => t('Add resource'),
			'#weight' => -10,
		);
		$form ['resource'] ['resource_name'] = array(
			'#type' => 'textfield',
			'#title' => t('resource'),
			'#maxlength' => 128,
			'#required' => TRUE,
			//'#description' => t("Enter resouse name."),
		);
		$form ['resource']['resource_type'] = array(
			'#type' => 'radios',
			'#title' => t('resource type'),
			'#options'=> array(
				'1'=>t('Hall'),
				'2'=>t('Lab'),
				'3'=>t('Projector'),
				'4'=>t('Laptop'),
				'5'=>t('Other'),
			),
			'#required' => TRUE,
			//'#description' => t("Enter resouse type."),
		);
		$form ['resource']['resource_access'] = array(
			'#type' => 'radios',
			'#title' => t('resource access permision'),
			'#options'=> array(
				'1'=>t('Show all authenticated users'),
				'2'=>t('Show only for Staff members'),
				'3'=>t('Show only for administers')
			),
			'#required' => TRUE,
			//'#description' => t("Enter resouse access level."),
		);
		$form ['resource']['resource_cpacity'] = array(
			'#type' => 'textfield',
			'#title' => t('resource capacity'),
			'#maxlength' => 128,
			'#required' => FALSE,
			//'#description' => t("Enter resouse capacity."),
		);
		$form ['resource']['resource_location'] = array(
			'#type' => 'textfield',
			'#title' => t('resource location'),
			'#default_value' => variable_get('resource_location', 'UCSC'),
			'#maxlength' => 128,
			'#required' => TRUE,
			'#description' => t("Enter resouse location."),
		);
		$form ['resource']['resource_telno'] = array(
			'#type' => 'textfield',
			'#title' => t('Telephone no'),
			'#maxlength' => 128,
			'#required' => TRUE,
			//'#description' => t("Resource caretakers number."),
		);
		$form ['resource']['resource_admin'] = array(
			'#type' => 'select',
			'#title' => t('resource Admin'),
			'#options' =>$myFun->adminList(),
			'#required' => TRUE,
			//'#description' => t("Enter resource administer."),
		);
		//Submit button:
		$form ['resource']['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Save'),
		);
		$form ['resource']['cancel'] = array(
			'#type' => 'button',
			'#value' => t('Cancel'),
			//'#executes_submit_callback' => TRUE,
			//'#submit' => array('rss_form_cancel'),
		);
		return $form;
	}
	
	//cancelation function
	/*
	function rss_form_cancel(){
		drupal_goto('https://127.0.0.1/SAD/Drupal/6/?q=admin');
	}
	*/
	//validate resource form data
	function rss_resource_form_validate($form, &$form_state){
		$resource_cpacity  = $form_state['values']['resource_cpacity'];
		if (!$resource_cpacity==''){
			if (!is_numeric($resource_cpacity)){
				form_set_error('resource_cpacity', t('Please enter a numaric value for the capacity.'));
			}
		}
		$resource_telno  = $form_state['values']['resource_telno'];
		if (!$resource_telno==''){
			if (!is_numeric($resource_telno)){
				form_set_error('resource_telno', t('Please enter a numaric value for tel-no.'));
			}
			elseif(strlen($resource_telno)<10 || strlen($resource_telno)>10){
				form_set_error('resource_telno', t('Please enter a tel-no correctly.'));
			} 
		}
	}
	/*
	resource form submit function
	*/
	function rss_resource_form_submit($form, &$form_state){
		$resource_name     = $form_state['values']['resource_name'];
		$resource_access    = $form_state['values']['resource_access'];
		$resource_cpacity  = $form_state['values']['resource_cpacity'];
		$resource_location = $form_state['values']['resource_location'];
		$resource_telno    = $form_state['values']['resource_telno'];
		$resource_admin    = $form_state['values']['resource_admin'];
		$resource_type    = $form_state['values']['resource_type'];
		$sql = "INSERT INTO resource (resource_name, resource_access, capacity, location, tel_no, admin_id, resource_type)
								VALUES ('$resource_name', '$resource_access', '$resource_cpacity', '$resource_location', '$resource_telno', '$resource_admin', '$resource_type')";
		submit($sql);
		$form_state['redirect'] = 'rss/resource';
	}
	/*
	Form for add events
	*/
	function rss_events_form(){
		$form['events'] = array(
			'#type' => 'fieldset',
			'#title' => t('Add Events'),
			'#weight' => -10,
		);
		$form ['events'] ['events_name'] = array(
			'#type' => 'textfield',
			'#title' => t('events'),
			'#maxlength' => 128,
			'#required' => TRUE,
			'#description' => t("Enter event name."),
		);
		$form ['events']['events_sDate'] = array(
			'#type' => 'date',
			'#title' => t('events start time'),
			'#required' => TRUE,
			'#description' => t("Enter events starting time."),
		);
		$form ['events']['events_eDate'] = array(
			'#type' => 'date',
			'#title' => t('events closeing time'),
			'#required' => TRUE,
			'#description' => t("Enter events closing time."),
		);
		$form ['events']['events_sTime'] = array(
			'#type' => 'select',
			'#title' => t('events starting time'),
			'#options' => array('a' => 'a', 'b' => 'b', 'c' => 'c'),
			'#required' => TRUE,
			'#description' => t("Enter starting time."),
		);
		$form ['events']['events_eTime'] = array(
			'#type' => 'date',
			'#date_format' => 'Y-m-d h:i A',
			'#date_year_range' => '-0:+1',
			'#title' => t('events ending time'),
			'#required' => TRUE,
			'#description' => t("Enter ending time."),
		);
		$form ['events']['events_note'] = array(
			'#type' => 'textarea',
			'#title' => t('events details'),
			'#maxlength' => 256,
			'#required' => TRUE,
			'#description' => t("Enter events description."),
		);
		//Submit button:
		$form ['events']['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Save'),
		);
		//Cancel button
		$form ['events']['cancel'] = array(
			'#type' => 'button',
			'#value' => t('Cancel'),
			//'#executes_submit_callback' => TRUE,
			//'#submit' => array('rss_form_cancel'),
		);
		return $form;
	}
	/*
	Event submition page
	*/
	function rss_events_form_submit($form, &$form_state){
		$events_name     = $form_state['values']['events_name'];
		$events_sDate    = $form_state['values']['events_sDate'];
		$events_eDate  = $form_state['values']['events_eDate'];
		$events_sTime = $form_state['values']['events_sTime'];
		$events_eTime    = $form_state['values']['events_eTime'];
		$events_note    = $form_state['values']['events_note'];
		$sql = "INSERT INTO events (events_name, events_sDate, events_eDate, events_sTime, events_eTime, events_note)
								VALUES ('$events_name', '$events_sDate', '$events_eDate', '$events_sTime', '$events_eTime', '$events_note')";
		submit($sql);
		$form_state['redirect'] = 'rss/resource';
	}
	/*
	Add reservation
	*/
	function rss_reservation_form(){
		$form['resource'] = array(
			'#type' => 'fieldset',
			'#title' => t('Add Resource'),
			'#weight' => -10,
		);
		$form ['resource']['resource_type'] = array(
			'#type' => 'radios',
			'#title' => t('resource type'),
			'#options'=> array(
				'1'=>t('Hall'),
				'2'=>t('Lab'),
				'3'=>t('Projector'),
				'4'=>t('Laptop')
			),
			'#required' => TRUE,
			'#description' => t("Enter resouse type."),
		);
		$form ['resource'] ['resource_name'] = array(
			'#type' => 'textfield',
			'#title' => t('resource'),
			'#maxlength' => 128,
			'#required' => TRUE,
			'#description' => t("Enter resouse name."),
		);
		/*
		$form ['resource'] ['events_name'] = array(
			'#type' => 'textfield',
			'#title' => t('events'),
			'#maxlength' => 128,
			'#required' => TRUE,
			'#description' => t("Enter resouse name."),
		);
		$form ['resource']['rUsage_sTime'] = array(
			'#type' => 'date',
			'#title' => t('events starting time'),
			'#required' => TRUE,
			'#description' => t("Enter starting time."),
		);
		$form ['resource']['rUsage_eTime'] = array(
			'#type' => 'date',
			'#date_format' => 'Y-m-d h:i A',
			'#date_year_range' => '-0:+1',
			'#title' => t('events ending time'),
			'#required' => TRUE,
			'#description' => t("Enter ending time."),
		);
		*/
		$form ['resource']['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Go to calendar'),
		);
		//Cancel button
		$form ['resource']['cancel'] = array(
			'#type' => 'button',
			'#value' => t('Cancel'),
			//'#executes_submit_callback' => TRUE,
			//'#submit' => array('rss_form_cancel'),
		);
		return $form;
	}
	/*
	Reservation submition function
	*/
	function rss_reservation_form_submit($form, &$form_state){
	
	}
	//submits sql queries
	function submit($sql){
		$dbCon = new dbCon;
		$dbCon->setQuery($sql);
	}